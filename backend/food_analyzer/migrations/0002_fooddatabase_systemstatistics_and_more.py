# Generated by Django 5.2.5 on 2025-09-11 12:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("food_analyzer", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FoodDatabase",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("food_name", models.CharField(max_length=255, unique=True)),
                ("alternative_names", models.JSONField(blank=True, default=list)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                ("calories_kcal", models.FloatField(blank=True, null=True)),
                ("protein_g", models.FloatField(blank=True, null=True)),
                ("fat_g", models.FloatField(blank=True, null=True)),
                ("carbs_g", models.FloatField(blank=True, null=True)),
                ("fiber_g", models.FloatField(blank=True, null=True)),
                ("sugar_g", models.FloatField(blank=True, null=True)),
                ("sodium_mg", models.FloatField(blank=True, null=True)),
                ("calcium_mg", models.FloatField(blank=True, null=True)),
                ("iron_mg", models.FloatField(blank=True, null=True)),
                ("vitamin_c_mg", models.FloatField(blank=True, null=True)),
                ("vitamin_a_ug", models.FloatField(blank=True, null=True)),
                ("data_source", models.CharField(max_length=100)),
                ("source_url", models.URLField(blank=True, null=True)),
                ("data_quality", models.CharField(default="good", max_length=20)),
                ("search_count", models.PositiveIntegerField(default=0)),
                ("last_searched", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Food Database Entry",
                "verbose_name_plural": "Food Database Entries",
                "ordering": ["food_name"],
            },
        ),
        migrations.CreateModel(
            name="SystemStatistics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("total_predictions", models.PositiveIntegerField(default=0)),
                ("correct_predictions", models.PositiveIntegerField(default=0)),
                ("accuracy_rate", models.FloatField(default=0.0)),
                ("high_confidence_predictions", models.PositiveIntegerField(default=0)),
                ("high_confidence_correct", models.PositiveIntegerField(default=0)),
                (
                    "medium_confidence_predictions",
                    models.PositiveIntegerField(default=0),
                ),
                ("medium_confidence_correct", models.PositiveIntegerField(default=0)),
                ("low_confidence_predictions", models.PositiveIntegerField(default=0)),
                ("low_confidence_correct", models.PositiveIntegerField(default=0)),
                ("total_corrections", models.PositiveIntegerField(default=0)),
                ("total_confirmations", models.PositiveIntegerField(default=0)),
                ("total_nutrition_searches", models.PositiveIntegerField(default=0)),
                (
                    "successful_nutrition_searches",
                    models.PositiveIntegerField(default=0),
                ),
                ("average_processing_time", models.FloatField(default=0.0)),
                ("date", models.DateField(auto_now=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "System Statistics",
                "verbose_name_plural": "System Statistics",
                "ordering": ["-date"],
            },
        ),
        migrations.AlterModelOptions(
            name="foodanalysis",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Food Analysis",
                "verbose_name_plural": "Food Analyses",
            },
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="data_source",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="fiber_g",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="model_used",
            field=models.CharField(default="multi_model", max_length=100),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="processing_time",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="sodium_mg",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="sugar_g",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="foodanalysis",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="confidence",
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="food_name",
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4, editable=False, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="image",
            field=models.ImageField(blank=True, null=True, upload_to="food_images/"),
        ),
        migrations.AlterField(
            model_name="foodanalysis",
            name="serving_size",
            field=models.CharField(default="100g", max_length=100),
        ),
        migrations.CreateModel(
            name="LearningCache",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("predicted_food", models.CharField(max_length=255)),
                ("correct_food", models.CharField(max_length=255)),
                ("occurrence_count", models.PositiveIntegerField(default=1)),
                ("confidence_boost", models.FloatField(default=1.15)),
                ("average_original_confidence", models.FloatField()),
                ("success_rate", models.FloatField(default=100.0)),
                ("first_seen", models.DateTimeField(auto_now_add=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Learning Cache",
                "verbose_name_plural": "Learning Cache",
                "ordering": ["-occurrence_count", "-last_seen"],
                "unique_together": {("predicted_food", "correct_food")},
            },
        ),
        migrations.CreateModel(
            name="UserFeedback",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("perfect", "Perfect Detection"),
                            ("close", "Close but not exact"),
                            ("wrong", "Completely Wrong"),
                            ("correction", "Manual Correction"),
                            ("confirmation", "User Confirmation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("predicted_food", models.CharField(max_length=255)),
                (
                    "correct_food",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("original_confidence", models.FloatField()),
                (
                    "correction_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("similar_looking", "Similar looking food"),
                            ("different_prep", "Different preparation"),
                            ("wrong_category", "Wrong category entirely"),
                            ("image_quality", "Image quality issue"),
                            ("other", "Other reason"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("user_notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "food_analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to="food_analyzer.foodanalysis",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Feedback",
                "verbose_name_plural": "User Feedbacks",
                "ordering": ["-created_at"],
            },
        ),
    ]
